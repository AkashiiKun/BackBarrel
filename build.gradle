plugins {
	id 'fabric-loom' version '1.3-SNAPSHOT'
	id 'maven-publish'
}

archivesBaseName = project.archives_base_name
group = project.maven_group

String runNumber = System.getenv("GITHUB_RUN_NUMBER")
String build = runNumber != null ? "build.${runNumber}" : "local"
version = "${mod_version}-${build}+mc${minecraft_version}"

repositories {
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://cursemaven.com" }
	maven { url = "https://maven.terraformersmc.com/releases/" }
	maven { url = "https://maven.shedaniel.me/" }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// dependencies
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// dev env
	modLocalRuntime("com.terraformersmc:modmenu:${project.mod_menu_version}")
}

processResources {
	Map<String, Object> properties = [
		"version": version,
		"minecraft_version": minecraft_version,
		"loader_version": loader_version,
		"fabric_version": fabric_version
	]

	properties.forEach(inputs::property)

	filesMatching("fabric.mod.json") {
		expand properties
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release.set(17)
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.base.archivesName.get()}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
	repositories {
	}
}